<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>